<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>